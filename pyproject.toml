[project]
name = "donald"
version = "0.32.3"
description = "Task manager for asyncio"
readme = "README.rst"
requires-python = ">=3.8"
license = {"text" = "MIT License"}
authors = [{ name = "Kirill Klenov", email = "horneds@gmail.com" }]
keywords = ["asyncio", "tasks", "queue"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Framework :: AsyncIO",
]
dependencies = [
  "aioamqp       >= 0.15.0",
  "async_timeout >= 4.0.2",
  "click         >= 6.7",
  "crontab       >= 0.22.0",
]

[project.urls]
homepage = "https://github.com/klen/donald"
repository = "https://github.com/klen/donald"

[project.scripts]
donald = "donald.__main__:main"

[project.optional-dependencies]
tests = [
  "redis       < 4.5.2",
  "pytest",
  "pytest-aio",
  "pytest-mypy",
  "pytest-redislite",
  "ruff",
]
dev = ["pre-commit", "refurb", "bump2version"]
redis = ["redis >= 4.2.0rc1"]

[tool.setuptools]
packages = ['donald']

[tool.setuptools.package-data]
donald = ["py.typed"]

[tool.pytest.ini_options]
addopts = "-xsvl"

[tool.mypy]
packages = ["donald"]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,pypy39

[testenv]
deps = -e .[tests]
commands =
	pytest --mypy tests

[testenv:pypy39]
deps = -e .[tests]
commands =
	pytest tests
"""

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [".venv", "docs", "example.py"]
select = ["ALL"]
ignore = ["D", "COM", "UP", "ANN", "DJ", "EM", "RSE", "SLF", "RET", "S101", "PLR2004", "N804", "E731"]

[tool.ruff.per-file-ignores]
"tests/*" = ["ARG", "TRY", "F", "PGH", "PLR", "PLW", "PTH", "SIM", "ERA", "RET504", "T20"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
preview = true
